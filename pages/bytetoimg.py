import streamlit as st
import numpy as np
from PIL import Image
import os
import io

# Background and sidebar styling
page_bg_img = """
<style>
[data-testid="stAppViewContainer"]{
background-image: url("https://images.unsplash.com/photo-1562813733-b31f71025d54?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D");
background-size: cover;
}
</style>
"""
st.markdown(page_bg_img, unsafe_allow_html=True)

logo_url = "icons/vnuk-symbol-only-official-800x237.png"
st.sidebar.image(logo_url)

st.sidebar.markdown(
    "<br> <br> <br> <br> <br> <br> <h1 style='text-align: center; font-size: 18px; color: #0080FF;'>Â© 2024 | baodeptrai</h1>", unsafe_allow_html=True)

# Function to convert hexadecimal data to an image
def hex2img(array):
    try:
        num_pixels = len(array)
        side_length = int(np.sqrt(num_pixels))  # Calculate the side length based on total number of pixels
        new_height = num_pixels // side_length  # Calculate the new height based on side length

        # Reshape the array based on calculated dimensions
        reshaped_array = array[:new_height * side_length]
        reshaped_array = np.reshape(reshaped_array, (new_height, side_length))

        im = Image.fromarray(np.uint8(reshaped_array))
        return im
    except Exception as e:
        st.error(f"An error occurred while converting bytes to image: {e}")
        return None

# Main Streamlit app
st.title("Bytes to Image Converter")

# Upload bytes file
bytes_file = st.file_uploader("Choose a bytes file", type=['bytes'])

if bytes_file:
    # Read bytes file
    bytes_data = bytes_file.read().decode('utf-8').split()
    bytes_data = [int(b, 16) for b in bytes_data if b.startswith('0x')]

    # Convert bytes to image
    st.header("Convert Bytes to Image")
    if st.button("Convert to Image"):
        image = hex2img(bytes_data)
        if image:
            st.image(image, caption='Converted Image', use_column_width=True)
            img_byte_arr = io.BytesIO()
            image.save(img_byte_arr, format='PNG')
            st.download_button("Download Image", data=img_byte_arr.getvalue(), file_name="converted_image.png")
